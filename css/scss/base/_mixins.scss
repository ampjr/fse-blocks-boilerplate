// Wraps interior content in a media query
@mixin breakpoint($querystring) {
  $valid: true;
  @if type-of($querystring) != 'string' {
    //@warn "querystring: #{$querystring} is not a string";
    $valid: false;
  }
  @if $valid == true {
    @media only screen and #{$querystring} {
      @content;
    }
  } @else {
    @media (min-width: #{$querystring}) {
      @content;
    }
  }
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.transition-color-300 {
  -webkit-transition: color 300ms ease;
  -moz-transition: color 300ms ease;
  -ms-transition: color 300ms ease;
  -o-transition: color 300ms ease;
  transition: color 300ms ease;
}
.transition-200 {
  -webkit-transition: all 200ms ease-in-out;
  -moz-transition: all 200ms ease-in-out;
  -ms-transition: all 200ms ease-in-out;
  -o-transition: all 200ms ease-in-out;
  transition: all 200ms ease-in-out;
}
.transition-300 {
  -webkit-transition: all 300ms ease;
  -moz-transition: all 300ms ease;
  -ms-transition: all 300ms ease;
  -o-transition: all 300ms ease;
  transition: all 300ms ease;
}
.transition-400 {
  -webkit-transition: all 400ms ease;
  -moz-transition: all 400ms ease;
  -ms-transition: all 400ms ease;
  -o-transition: all 400ms ease;
  transition: all 400ms ease;
}
.transition-600 {
  -webkit-transition: all 600ms ease;
  -moz-transition: all 600ms ease;
  -ms-transition: all 600ms ease;
  -o-transition: all 600ms ease;
  transition: all 600ms ease;
}
.transition-1200 {
  -webkit-transition: all 1200ms ease;
  -moz-transition: all 1200ms ease;
  -ms-transition: all 1200ms ease;
  -o-transition: all 1200ms ease;
  transition: all 1200ms ease;
}
@mixin red-glow-transition($duration: 400ms) {
  transition: box-shadow $duration ease;
  box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0);
}
